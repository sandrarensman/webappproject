@page
@using Microsoft.AspNetCore.Mvc.TagHelpers
@model IndexModel
@inject IConfiguration Configuration

@{
    ViewData["Title"] = "Enrollments";
}

<h1>@Configuration.GetSection("SiteData")["Enrollments"]</h1>

<form asp-page="./Index" method="get">
    <div class="form-actions no-color">
        <p>
            Name:
            <input type="text" name="SearchString" value="@Model.CurrentFilter"/>
            <input type="submit" value="Search" class="btn btn-custom"/>
            <a asp-page="./Index" class="btn btn-custom">Show all</a>
        </p>
    </div>
</form>

<table class="table">
    <thead>
    <tr>
        <th class="@(Model.CurrentSort == "student" || Model.CurrentSort == "student_desc" || Model.CurrentSort == "default" ? "sorted" : "")">
            <a asp-page="./Index"
               asp-route-sortOrder="@Model.StudentSort"
               asp-route-currentFilter="@Model.CurrentFilter">
                @Html.DisplayNameFor(model => model.Enrollments.Items.FirstOrDefault().Student.FullName)
                @switch (Model.CurrentSort)
                {
                    case "student_desc":
                        @:<span>&#11014;</span> <!-- (↑) -->
                        break;
                    case "student" or "default":
                        @:<span>&#11015;</span> <!-- (↓) -->
                        break;
                }
            </a>
        </th>
        <th class="@(Model.CurrentSort == "date" || Model.CurrentSort == "date_desc" ? "sorted" : "")">
            <a asp-page="./Index"
               asp-route-sortOrder="@Model.DateSort"
               asp-route-currentFilter="@Model.CurrentFilter">
                @Html.DisplayNameFor(model => model.Enrollments.Items.FirstOrDefault().StartDate)
                @switch (Model.CurrentSort)
                {
                    case "date_desc":
                        @:<span>&#11014;</span> <!-- (↑) -->
                        break;
                    case "date":
                        @:<span>&#11015;</span> <!-- (↓) -->
                        break;
                }
            </a>
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Enrollments.Items.FirstOrDefault().EndDate)
        </th>
        <th>
            <a asp-page="./Index" asp-route-sortOrder="@Model.TypeSort" asp-route-currentFilter="@Model.CurrentFilter">
                @Html.DisplayNameFor(model => model.Enrollments.Items.FirstOrDefault().EnrollmentType)
            </a>
        </th>
        <th class="text-end">
            @Html.Raw(Model.PageSizeDropdownHtml)
        </th>
    </tr>
    </thead>
    <tbody>
    @foreach (var item in Model.Enrollments.Items)
    {
        <tr class="clickable-row enrollment-row" data-href="@Url.Page("./Details", new { id = item.EnrollmentId })">
            <td>@Html.DisplayFor(modelItem => item.Student.FullName)</td>
            <td>@Html.DisplayFor(modelItem => item.StartDate)</td>
            <td>@Html.DisplayFor(modelItem => item.EndDate)</td>
            <td>@Html.DisplayFor(modelItem => item.EnrollmentType)</td>
            <td class="text-end">
                <a asp-page="./Delete" asp-route-id="@item.EnrollmentId" class="delete-link" title="Delete">✖</a>
            </td>
        </tr>
    }
    </tbody>
</table>

@{
    var prevDisabled = !Model.Enrollments.HasPreviousPage ? "disabled" : "";
    var nextDisabled = !Model.Enrollments.HasNextPage ? "disabled" : "";
}


<a asp-page="./Index"
   asp-route-sortOrder="@Model.CurrentSort"
   asp-route-pageIndex="@(Model.Enrollments.PageIndex - 1)"
   asp-route-currentFilter="@Model.CurrentFilter"
   class="btn btn-custom @prevDisabled">
    Previous
</a>
<a asp-page="./Index"
   asp-route-sortOrder="@Model.CurrentSort"
   asp-route-pageIndex="@(Model.Enrollments.PageIndex + 1)"
   asp-route-currentFilter="@Model.CurrentFilter"
   class="btn btn-custom @nextDisabled">
    Next
</a>

