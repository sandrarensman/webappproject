@page
@using Microsoft.AspNetCore.Mvc.TagHelpers
@model IndexModel

@{
    ViewData["Title"] = "Students";
}

<h1>Students</h1>

<form asp-page="./Index" method="get">
    <div class="form-actions no-color">
        <p>
            Name:
            <input type="text" name="SearchString" value="@Model.CurrentFilter"/>
            <input type="submit" value="Search" class="btn btn-custom"/>
            <a asp-page="./Index" class="btn btn-custom">Show all</a>
        </p>
    </div>
</form>

<table class="table">
    <thead>
    <tr>
        <th class="@(Model.CurrentSort is "first_name" or "first_name_desc" or "default" ? "sorted" : "")">
            <a asp-page="./Index"
               asp-route-sortOrder="@Model.FirstNameSort"
               asp-route-currentFilter="@Model.CurrentFilter">
                @Html.DisplayNameFor(model => model.Students.Items[0].FirstName)
                @switch (Model.CurrentSort)
                {
                    case "first_name_desc":
                        @:<span>&#11014;</span> <!-- (↑) -->
                        break;
                    case "first_name" or "default":
                        @:<span>&#11015;</span> <!-- (↓) -->
                        break;
                }
            </a>
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Students.Items[0].Prefix)
        </th>
        <th class="@(Model.CurrentSort is "last_name" or "last_name_desc" ? "sorted" : "")">
            <a asp-page="./Index"
               asp-route-sortOrder="@Model.LastNameSort"
               asp-route-currentFilter="@Model.CurrentFilter">
                @Html.DisplayNameFor(model => model.Students.Items[0].LastName)
                @switch (Model.CurrentSort)
                {
                    case "last_name_desc":
                        @:<span>&#11014;</span> <!-- (↑) -->
                        break;
                    case "last_name":
                        @:<span>&#11015;</span> <!-- (↓) -->
                        break;
                }
            </a>
        <th>
            @Html.DisplayNameFor(model => model.Students.Items[0].PhoneNumber)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Students.Items[0].EmailAddress)
        </th>
        <th class="text-end">
            @Html.Raw(Model.PageSizeDropdownHtml)
        </th>
    </tr>
    </thead>
    <tbody>
    @foreach (var item in Model.Students.Items)
    {
        <tr class="clickable-row student-row" data-href="@Url.Page("./Details", new { id = item.StudentId })">
            <td>@Html.DisplayFor(modelItem => item.FirstName)</td>
            <td>@Html.DisplayFor(modelItem => item.Prefix)</td>
            <td>@Html.DisplayFor(modelItem => item.LastName)</td>
            <td>@Html.DisplayFor(modelItem => item.PhoneNumber)</td>
            <td>@Html.DisplayFor(modelItem => item.EmailAddress)</td>
            <td class="text-end">
                <a asp-page="./Delete" asp-route-id="@item.StudentId" class="delete-link" title="Delete">✖</a>
            </td>
        </tr>
    }
    </tbody>
</table>

@{
    var prevDisabled = !Model.Students.HasPreviousPage ? "disabled" : "";
    var nextDisabled = !Model.Students.HasNextPage ? "disabled" : "";
}

<a asp-page="./Index"
   asp-route-sortOrder="@Model.CurrentSort"
   asp-route-pageIndex="@(Model.Students.PageIndex - 1)"
   asp-route-currentFilter="@Model.CurrentFilter"
   class="btn btn-custom @prevDisabled">
    Previous
</a>
<a asp-page="./Index"
   asp-route-sortOrder="@Model.CurrentSort"
   asp-route-pageIndex="@(Model.Students.PageIndex + 1)"
   asp-route-currentFilter="@Model.CurrentFilter"
   class="btn btn-custom @nextDisabled">
    Next
</a>